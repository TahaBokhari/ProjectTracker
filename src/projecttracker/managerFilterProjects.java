/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projecttracker;

import java.awt.Desktop;
import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author tahab
 */
public class managerFilterProjects extends javax.swing.JFrame {

    /**
     * Creates new form FilterProjects
     */
     Connection conn=null;
    
    public managerFilterProjects() {
        
        initComponents();
        //setExtendedState(JFrame.MAXIMIZED_BOTH);
        conn=SqLiteConnection.connect();
        buttonGroup1.add(Revenue);
        //buttonGroup1.add(paymentStatus);
        //buttonGroup1.add(completionStatus);
        buttonGroup1.add(gushRadio);
        buttonGroup1.add(parcelRadio);
        buttonGroup1.add(sectionRadio);
//        
        monthCombo.setEnabled(false);
        yearCombo.setEnabled(false);
        payStatusCombo.disable();
        workStatusCombo.disable();
        gushValue.disable();
        parcelValue.disable();
        sectionValue.disable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        ProjectNumber = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Revenue = new javax.swing.JRadioButton();
        completionStatus = new javax.swing.JRadioButton();
        paymentStatus = new javax.swing.JRadioButton();
        monthCombo = new com.toedter.calendar.JMonthChooser();
        yearCombo = new com.toedter.calendar.JYearChooser();
        payStatusCombo = new javax.swing.JComboBox();
        workStatusCombo = new javax.swing.JComboBox();
        gushRadio = new javax.swing.JRadioButton();
        parcelRadio = new javax.swing.JRadioButton();
        gushValue = new javax.swing.JTextField();
        parcelValue = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        sectionRadio = new javax.swing.JRadioButton();
        sectionValue = new javax.swing.JTextField();
        allProjects = new javax.swing.JButton();
        companyRadio = new javax.swing.JRadioButton();
        companyValue = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        ProjectNumber.setEditable(false);
        ProjectNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProjectNumberActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 758));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("All Projects");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 77;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 306, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(41, 0, 0));
        jButton1.setText("Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 895, 48, 12);
        jPanel2.add(jButton1, gridBagConstraints);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        Revenue.setBackground(new java.awt.Color(255, 255, 255));
        Revenue.setText("Revenue");
        Revenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RevenueActionPerformed(evt);
            }
        });

        completionStatus.setBackground(new java.awt.Color(255, 255, 255));
        completionStatus.setText("Completion Status");
        completionStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completionStatusActionPerformed(evt);
            }
        });

        paymentStatus.setBackground(new java.awt.Color(255, 255, 255));
        paymentStatus.setText("Payment Status");
        paymentStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentStatusActionPerformed(evt);
            }
        });

        yearCombo.setBackground(new java.awt.Color(255, 255, 255));

        payStatusCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Paid", "Not Paid" }));

        workStatusCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "On Work", "On Drow", "Done" }));

        gushRadio.setBackground(new java.awt.Color(255, 255, 255));
        gushRadio.setText("Gush ");
        gushRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gushRadioActionPerformed(evt);
            }
        });

        parcelRadio.setBackground(new java.awt.Color(255, 255, 255));
        parcelRadio.setText("Parcel ");
        parcelRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parcelRadioActionPerformed(evt);
            }
        });

        gushValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gushValueActionPerformed(evt);
            }
        });

        parcelValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parcelValueActionPerformed(evt);
            }
        });

        search.setBackground(new java.awt.Color(255, 255, 255));
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        sectionRadio.setBackground(new java.awt.Color(255, 255, 255));
        sectionRadio.setText("Section ");
        sectionRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionRadioActionPerformed(evt);
            }
        });

        sectionValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionValueActionPerformed(evt);
            }
        });

        allProjects.setBackground(new java.awt.Color(255, 255, 255));
        allProjects.setText("All Projects");
        allProjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allProjectsActionPerformed(evt);
            }
        });

        companyRadio.setBackground(new java.awt.Color(255, 255, 255));
        companyRadio.setText("Company");
        companyRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyRadioActionPerformed(evt);
            }
        });

        companyValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyValueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Revenue)
                        .addGap(153, 153, 153)
                        .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(paymentStatus)
                        .addGap(113, 113, 113)
                        .addComponent(payStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(completionStatus)
                        .addGap(97, 97, 97)
                        .addComponent(workStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(gushRadio)
                        .addGap(169, 169, 169)
                        .addComponent(gushValue, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(parcelRadio)
                        .addGap(163, 163, 163)
                        .addComponent(parcelValue, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(sectionRadio)
                        .addGap(155, 155, 155)
                        .addComponent(sectionValue, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(companyRadio)
                        .addGap(149, 149, 149)
                        .addComponent(companyValue, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(780, 780, 780)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(allProjects, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Revenue)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paymentStatus)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(payStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(completionStatus)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(workStatusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gushRadio)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(gushValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parcelRadio)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(parcelValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sectionRadio)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(sectionValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(companyRadio)
                    .addComponent(companyValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search)
                    .addComponent(allProjects)))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1523;
        gridBagConstraints.ipady = 423;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(13, 12, 13, 12);
        jPanel4.add(jScrollPane1, gridBagConstraints);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1620, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void RevenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RevenueActionPerformed
        // TODO add your handling code here:
        monthCombo.setEnabled(true);
        yearCombo.setEnabled(true);
        
        payStatusCombo.disable();
        workStatusCombo.disable();
        gushValue.disable();
        parcelValue.disable();
        sectionValue.disable();
        
    }//GEN-LAST:event_RevenueActionPerformed

    private void paymentStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentStatusActionPerformed
        // TODO add your handling code here:
        payStatusCombo.enable();
        
        monthCombo.setEnabled(false);
        yearCombo.setEnabled(false);
        workStatusCombo.disable();
        gushValue.disable();
        parcelValue.disable();
        sectionValue.disable();
        
        
    }//GEN-LAST:event_paymentStatusActionPerformed

    private void completionStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completionStatusActionPerformed
        // TODO add your handling code here:
        workStatusCombo.enable();
        
        monthCombo.setEnabled(false);
        yearCombo.setEnabled(false);
        payStatusCombo.disable();
        gushValue.disable();
        parcelValue.disable();
        sectionValue.disable();
    }//GEN-LAST:event_completionStatusActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        Statement stmt=null;
        ResultSet rs= null;
        
        Statement stmt2=null;
        ResultSet rs2= null;
        
        
        if(paymentStatus.isSelected()==true  && completionStatus.isSelected()==true)
        {
            String status=payStatusCombo.getSelectedItem().toString();
            
            String cStatus=workStatusCombo.getSelectedItem().toString();
            System.out.println(status);
            
            String sql="Select ProjectNumber AS Project_Number,team AS Team,strftime('%Y-%m-%d', startDate / 1000, 'unixepoch') AS Start_Date,strftime('%Y-%m-%d', endDate / 1000, 'unixepoch')AS End_Date,projectDescription AS Description,company AS Company,phoneNumber AS Phone_Number,location AS Location,gush AS Gush, parcel AS Parcel,section AS Section,workingDays AS Working_Days,completionStatus AS Completion_Status,paymentStatus AS Payment_Status From Projects Where paymentStatus='"+status+"' and completionStatus='"+cStatus+"'";//Where paymentStatus='"+status+"'
            
            String sql2="Select sum(price) From Projects Where paymentStatus='"+status+"' and completionStatus='"+cStatus+"' ";
            
            try {
                stmt=conn.createStatement();
                rs=stmt.executeQuery(sql);
                
                stmt2=conn.createStatement();
                rs2=stmt2.executeQuery(sql2);
                
                
                if(!rs.next())
                {
                  //total.setText(Integer.toString(0));  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  JOptionPane.showMessageDialog(null," No Record Found ");
                  
                  
                }
                else
                {
                  stmt=conn.createStatement();
                  rs=stmt.executeQuery(sql);  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs)); 
                  
                  int totalAmount=rs2.getInt(1);
                  System.out.println(totalAmount);
                  
                  //total.setText(Integer.toString(totalAmount));
                  
                }
            } catch (SQLException ex) {
                Logger.getLogger(managerFilterProjects.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try {
                    stmt.close();
                    rs.close();
                    
                    stmt2.close();
                    rs2.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        
        
        else if(Revenue.isSelected()==true)
        {
            int year=yearCombo.getValue();
            System.out.println(year);
            
            int month=monthCombo.getMonth();
            System.out.println(month);
            String d=year+"-"+month+1;
            System.out.println(d);
        
            String sql="Select ProjectNumber AS Project_Number,team AS Team,strftime('%Y-%m-%d', startDate / 1000, 'unixepoch') AS Start_Date,strftime('%Y-%m-%d', endDate / 1000, 'unixepoch')AS End_Date,projectDescription AS Description,company AS Company,phoneNumber AS Phone_Number,location AS Location,gush AS Gush, parcel AS Parcel,section AS Section,workingDays AS Working_Days,completionStatus AS Completion_Status,paymentStatus AS Payment_Status From Projects Where strftime('%Y-%m', startDate / 1000, 'unixepoch')= '"+d+"'";//Where paymentStatus='"+status+"'
        
            String sql2="Select sum(price) From Projects Where strftime('%Y-%m', startDate / 1000, 'unixepoch')= '"+d+"'";
            
            try {
                stmt=conn.createStatement();
                rs=stmt.executeQuery(sql);
                
                stmt2=conn.createStatement();
                rs2=stmt2.executeQuery(sql2);
                
                
                if(!rs.next())
                {
                  //total.setText(Integer.toString(0));
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  JOptionPane.showMessageDialog(null," No Record Found ");
                  
                  
                }
                else
                {
                  stmt=conn.createStatement();
                  rs=stmt.executeQuery(sql);  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs)); 
                  
                  int totalAmount=rs2.getInt(1);
                  System.out.println(totalAmount);
                  
                  //total.setText(Integer.toString(totalAmount));
                  
                }
            } catch (SQLException ex) {
                Logger.getLogger(managerFilterProjects.class.getName()).log(Level.SEVERE, null, ex);
            
        }
            finally
            {
                try {
                    stmt.close();
                    rs.close();
                    
                    stmt2.close();
                    rs2.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(paymentStatus.isSelected()==true)
        {
            String status=payStatusCombo.getSelectedItem().toString();
            System.out.println(status);
            
            String sql="Select ProjectNumber AS Project_Number,team AS Team,strftime('%Y-%m-%d', startDate / 1000, 'unixepoch') AS Start_Date,strftime('%Y-%m-%d', endDate / 1000, 'unixepoch')AS End_Date,projectDescription AS Description,company AS Company,phoneNumber AS Phone_Number,location AS Location,gush AS Gush, parcel AS Parcel,section AS Section,workingDays AS Working_Days,completionStatus AS Completion_Status,paymentStatus AS Payment_Status From Projects Where paymentStatus='"+status+"' ";//Where paymentStatus='"+status+"'
            
            String sql2="Select sum(price) From Projects Where paymentStatus='"+status+"' ";
            
            try {
                stmt=conn.createStatement();
                rs=stmt.executeQuery(sql);
                
                stmt2=conn.createStatement();
                rs2=stmt2.executeQuery(sql2);
                
                
                if(!rs.next())
                {
                  //total.setText(Integer.toString(0));  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  JOptionPane.showMessageDialog(null," No Record Found ");
                  
                  
                }
                else
                {
                  stmt=conn.createStatement();
                  rs=stmt.executeQuery(sql);  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs)); 
                  
                  int totalAmount=rs2.getInt(1);
                  System.out.println(totalAmount);
                  
                  //total.setText(Integer.toString(totalAmount));
                  
                }
            } catch (SQLException ex) {
                Logger.getLogger(managerFilterProjects.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try {
                    stmt.close();
                    rs.close();
                    
                    stmt2.close();
                    rs2.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        
        else if(gushRadio.isSelected()==true)
        {
            int GUSH =Integer.parseInt(gushValue.getText().toString());
            //System.out.println(status);
            
            String sql="Select ProjectNumber AS Project_Number,team AS Team,strftime('%Y-%m-%d', startDate / 1000, 'unixepoch') AS Start_Date,strftime('%Y-%m-%d', endDate / 1000, 'unixepoch')AS End_Date,projectDescription AS Description,company AS Company,phoneNumber AS Phone_Number,location AS Location,gush AS Gush, parcel AS Parcel,section AS Section,workingDays AS Working_Days,completionStatus AS Completion_Status,price AS Price,paymentStatus AS Payment_Status From Projects Where gush='"+GUSH+"' ";//Where paymentStatus='"+status+"'
            
            String sql2="Select sum(price) From Projects Where gush='"+GUSH+"' ";
            
            try {
                stmt=conn.createStatement();
                rs=stmt.executeQuery(sql);
                
                stmt2=conn.createStatement();
                rs2=stmt2.executeQuery(sql2);
                
                
                if(!rs.next())
                {
                  //total.setText(Integer.toString(0));  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  JOptionPane.showMessageDialog(null," No Record Found ");
                  
                  
                }
                else
                {
                  stmt=conn.createStatement();
                  rs=stmt.executeQuery(sql);  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs)); 
                  
                  int totalAmount=rs2.getInt(1);
                  System.out.println(totalAmount);
                  
                  //total.setText(Integer.toString(totalAmount));
                  
                }
            } catch (SQLException ex) {
                Logger.getLogger(managerFilterProjects.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try {
                    stmt.close();
                    rs.close();
                    
                    stmt2.close();
                    rs2.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        
        
        else if(parcelRadio.isSelected()==true)
        {
            int PARCEL =Integer.parseInt(gushValue.getText().toString());
            //System.out.println(status);
            
            String sql="Select ProjectNumber AS Project_Number,team AS Team,strftime('%Y-%m-%d', startDate / 1000, 'unixepoch') AS Start_Date,strftime('%Y-%m-%d', endDate / 1000, 'unixepoch')AS End_Date,projectDescription AS Description,company AS Company,phoneNumber AS Phone_Number,location AS Location,gush AS Gush, parcel AS Parcel,section AS Section,workingDays AS Working_Days,completionStatus AS Completion_Status,paymentStatus AS Payment_Status From Projects Where parcel='"+PARCEL+"' ";//Where paymentStatus='"+status+"'
            
            String sql2="Select sum(price) From Projects Where parcel='"+PARCEL+"' ";
            
            try {
                stmt=conn.createStatement();
                rs=stmt.executeQuery(sql);
                
                stmt2=conn.createStatement();
                rs2=stmt2.executeQuery(sql2);
                
                
                if(!rs.next())
                {
                  //total.setText(Integer.toString(0));  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  JOptionPane.showMessageDialog(null," No Record Found ");
                  
                  
                }
                else
                {
                  stmt=conn.createStatement();
                  rs=stmt.executeQuery(sql);  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs)); 
                  
                  int totalAmount=rs2.getInt(1);
                  System.out.println(totalAmount);
                  
                  //total.setText(Integer.toString(totalAmount));
                  
                }
            } catch (SQLException ex) {
                Logger.getLogger(managerFilterProjects.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try {
                    stmt.close();
                    rs.close();
                    
                    stmt2.close();
                    rs2.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        
        
        else if(completionStatus.isSelected()==true)
        {
            
            String status=workStatusCombo.getSelectedItem().toString();
            System.out.println(status);
            String sql="Select ProjectNumber AS Project_Number,team AS Team,strftime('%Y-%m-%d', startDate / 1000, 'unixepoch') AS Start_Date,strftime('%Y-%m-%d', endDate / 1000, 'unixepoch')AS End_Date,projectDescription AS Description,company AS Company,phoneNumber AS Phone_Number,location AS Location,gush AS Gush, parcel AS Parcel,section AS Section,workingDays AS Working_Days,completionStatus AS Completion_Status,paymentStatus AS Payment_Status From Projects Where completionStatus='"+status+"' ";//Where paymentStatus='"+status+"'
            
            String sql2="Select sum(price) From Projects Where completionStatus='"+status+"' ";
            
            try {
                stmt=conn.createStatement();
                rs=stmt.executeQuery(sql);
                
                stmt2=conn.createStatement();
                rs2=stmt2.executeQuery(sql2);
                
                
                if(!rs.next())
                {
                  //total.setText(Integer.toString(0));  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  JOptionPane.showMessageDialog(null," No Record Found ");
                  
                }
                else
                {
                  stmt=conn.createStatement();
                  rs=stmt.executeQuery(sql);  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  
                  int totalAmount=rs2.getInt(1);
                  System.out.println(totalAmount);
                  
                  //total.setText(Integer.toString(totalAmount));
                  
                }
            } catch (SQLException ex) {
                Logger.getLogger(managerFilterProjects.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try {
                    stmt.close();
                    rs.close();
                    
                    stmt2.close();
                    rs2.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
            
        }
        
         else if(sectionRadio.isSelected()==true)
        {
            
            String status=sectionValue.getText().toString();
                    //workStatusCombo.getSelectedItem().toString();
            System.out.println(status);
            String sql="Select ProjectNumber AS Project_Number,team AS Team,strftime('%Y-%m-%d', startDate / 1000, 'unixepoch') AS Start_Date,strftime('%Y-%m-%d', endDate / 1000, 'unixepoch')AS End_Date,projectDescription AS Description,company AS Company,phoneNumber AS Phone_Number,location AS Location,gush AS Gush, parcel AS Parcel,section AS Section,workingDays AS Working_Days,completionStatus AS Completion_Status,paymentStatus AS Payment_Status From Projects Where section='"+status+"' ";//Where paymentStatus='"+status+"'
            
            String sql2="Select sum(price) From Projects Where section='"+status+"' ";
            
            try {
                stmt=conn.createStatement();
                rs=stmt.executeQuery(sql);
                
                stmt2=conn.createStatement();
                rs2=stmt2.executeQuery(sql2);
                
                
                if(!rs.next())
                {
                  //total.setText(Integer.toString(0));  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  JOptionPane.showMessageDialog(null," No Record Found ");
                  
                }
                else
                {
                  stmt=conn.createStatement();
                  rs=stmt.executeQuery(sql);  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  
                  int totalAmount=rs2.getInt(1);
                  System.out.println(totalAmount);
                  
                  //total.setText(Integer.toString(totalAmount));
                  
                }
            } catch (SQLException ex) {
                Logger.getLogger(managerFilterProjects.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try {
                    stmt.close();
                    rs.close();
                    
                    stmt2.close();
                    rs2.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
            
        }
         
         else if(companyRadio.isSelected()==true)
        {
            
            String status=companyValue.getText().toString();
                    //workStatusCombo.getSelectedItem().toString();
            System.out.println(status);
            String sql="Select ProjectNumber AS Project_Number,team AS Team,strftime('%Y-%m-%d', startDate / 1000, 'unixepoch') AS Start_Date,strftime('%Y-%m-%d', endDate / 1000, 'unixepoch')AS End_Date,projectDescription AS Description,company AS Company,phoneNumber AS Phone_Number,location AS Location,gush AS Gush, parcel AS Parcel,section AS Section,workingDays AS Working_Days,completionStatus AS Completion_Status,paymentStatus AS Payment_Status From Projects Where company='"+status+"' ";//Where paymentStatus='"+status+"'
            
            String sql2="Select sum(price) From Projects Where company='"+status+"' ";
            
            try {
                stmt=conn.createStatement();
                rs=stmt.executeQuery(sql);
                
                stmt2=conn.createStatement();
                rs2=stmt2.executeQuery(sql2);
                
                
                if(!rs.next())
                {
                  //total.setText(Integer.toString(0));  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  JOptionPane.showMessageDialog(null," No Record Found ");
                  
                }
                else
                {
                  stmt=conn.createStatement();
                  rs=stmt.executeQuery(sql);  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  
                  int totalAmount=rs2.getInt(1);
                  System.out.println(totalAmount);
                  
                  //total.setText(Integer.toString(totalAmount));
                  
                }
            } catch (SQLException ex) {
                Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
            }
            finally
            {
                try {
                    stmt.close();
                    rs.close();
                    
                    stmt2.close();
                    rs2.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
            
        }
        
        else if(Revenue.isSelected()==false && paymentStatus.isSelected()==false && completionStatus.isSelected()==false && gushRadio.isSelected()==false &&  parcelRadio.isSelected()==false && sectionRadio.isSelected()==false && companyRadio.isSelected()==false)
        {
            JOptionPane.showMessageDialog(null," Please select atleast one option! ");
        }
    }//GEN-LAST:event_searchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try {
             // TODO add your handling code here:
             menu obj=new menu();
             obj.setVisible(true);
             conn.close();
             this.dispose();
         } catch (SQLException ex) {
             Logger.getLogger(managerFilterProjects.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ProjectNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProjectNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProjectNumberActionPerformed

    private void gushRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gushRadioActionPerformed
        // TODO add your handling code here:
        gushValue.enable();
        
        monthCombo.setEnabled(false);
        yearCombo.setEnabled(false);
        payStatusCombo.disable();
        workStatusCombo.disable();
        parcelValue.disable();
        sectionValue.disable();
    }//GEN-LAST:event_gushRadioActionPerformed

    private void parcelRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parcelRadioActionPerformed
        // TODO add your handling code here:
        parcelValue.enable();
        monthCombo.setEnabled(false);
        yearCombo.setEnabled(false);
        payStatusCombo.disable();
        workStatusCombo.disable();
        gushValue.disable();
        sectionValue.disable();
    }//GEN-LAST:event_parcelRadioActionPerformed

    private void gushValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gushValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gushValueActionPerformed

    private void parcelValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parcelValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_parcelValueActionPerformed

    private void allProjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allProjectsActionPerformed
        // TODO add your handling code here:
        Statement stmt=null;
        ResultSet rs= null;
        
        Statement stmt2=null;
        ResultSet rs2= null;
        
        
            
            String sql="Select ProjectNumber AS Project_Number,team AS Team,strftime('%Y-%m-%d', startDate / 1000, 'unixepoch') AS Start_Date,strftime('%Y-%m-%d', endDate / 1000, 'unixepoch')AS End_Date,projectDescription AS Description,company AS Company,phoneNumber AS Phone_Number,location AS Location,gush AS Gush, parcel AS Parcel,section AS Section,workingDays AS Working_Days,completionStatus AS Completion_Status,price AS Price,paymentStatus AS Payment_Status From Projects";//Where paymentStatus='"+status+"'
        
            String sql2="Select sum(price) From Projects ";
            
            try {
                stmt=conn.createStatement();
                rs=stmt.executeQuery(sql);
                
                stmt2=conn.createStatement();
                rs2=stmt2.executeQuery(sql2);
                
                
                if(!rs.next())
                {
                  //total.setText(Integer.toString(0));
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                  JOptionPane.showMessageDialog(null," No Record Found ");
                  
                  
                }
                else
                {
                  stmt=conn.createStatement();
                  rs=stmt.executeQuery(sql);  
                  jTable1.setModel(DbUtils.resultSetToTableModel(rs)); 
                  
                  int totalAmount=rs2.getInt(1);
                  System.out.println(totalAmount);
                  
                  //total.setText(Integer.toString(totalAmount));
                  
                }
            } catch (SQLException ex) {
                Logger.getLogger(managerFilterProjects.class.getName()).log(Level.SEVERE, null, ex);
            
        } 
            finally
            {
                try {
                    stmt.close();
                    rs.close();
                    
                    stmt2.close();
                    rs2.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FilterProjects.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
    
        
        
    }//GEN-LAST:event_allProjectsActionPerformed

    private void sectionRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionRadioActionPerformed
        // TODO add your handling code here:
        sectionValue.enable();
        monthCombo.setEnabled(false);
        yearCombo.setEnabled(false);
        payStatusCombo.disable();
        workStatusCombo.disable();
        gushValue.disable();
        parcelValue.disable();
       
    }//GEN-LAST:event_sectionRadioActionPerformed

    private void sectionValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sectionValueActionPerformed

    private void companyRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_companyRadioActionPerformed

    private void companyValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_companyValueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(managerFilterProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(managerFilterProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(managerFilterProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(managerFilterProjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new managerFilterProjects().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ProjectNumber;
    private javax.swing.JRadioButton Revenue;
    private javax.swing.JButton allProjects;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton companyRadio;
    private javax.swing.JTextField companyValue;
    private javax.swing.JRadioButton completionStatus;
    private javax.swing.JRadioButton gushRadio;
    private javax.swing.JTextField gushValue;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JMonthChooser monthCombo;
    private javax.swing.JRadioButton parcelRadio;
    private javax.swing.JTextField parcelValue;
    private javax.swing.JComboBox payStatusCombo;
    private javax.swing.JRadioButton paymentStatus;
    private javax.swing.JButton search;
    private javax.swing.JRadioButton sectionRadio;
    private javax.swing.JTextField sectionValue;
    private javax.swing.JComboBox workStatusCombo;
    private com.toedter.calendar.JYearChooser yearCombo;
    // End of variables declaration//GEN-END:variables
}
